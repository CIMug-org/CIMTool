= CIMTool Change Log =

== Release 1.2.2 ==

 * Fix a jena ConversionException when remapping profile to new CIM namespace.

 * Add missing wizard for new incremental validation rules.
 
 * Correct title in import schema wizard.
 
 * Fix regression: ProjectModelView not responding to selection or double click
 
== Release 1.2.1 ==

 * Released under LGPL.

 * Remove a Java 6 dependency.

== Release 1.1.7 ==

 * Added AbsoluteDateTime to the built-in list of fundamental types. It is 
   mapped to an xsd:datetime

 * Fixed a regression that prevented the Import Incremental Model wizard from 
   being completed.

 * Fixed a regression in the Validation View in the Validation Perspective. The 
   view action buttons were missing.


== Release 1.1.6 ==

 * Fixed a bug in the backwards compatibility code for the 1.1.5 profile format 
   change.   The symptom was a failure to generate XML schemas from profile 
   created in earlier versions.

 * A bug in the handling of the unit attribute of datatype definitions has been 
   corrected.  Unit and multiplier values should now be captured in the 
   whole-of-schema OWL output as annotation properties.  (Although there don't 
   seem to be many multiplier values defined in the CIM so far.)  To see this 
   output choose File|Export|CIMTool|Export Merged Schema from the menus. 

 * The schema search wizard has been added to the profile editor.  Look for a 
   search button on the top right of the Add/Remove page. Classes can found by 
   typing in a few characters of their name or the name of one of their 
   properties and selecting the desired match. 


== Release 1.1.5 ==

 * The form of the generated XML schema has been changed in the case where a 
   property is defined with more than one range type.  In this case no element 
   is generated for the property and an xsd:choice of element representing the 
   types appears.   

 * A new stereotype "Preserve" has been defined.  When assigned to a property 
   it causes the property element to be generated wrapping the type elements. 
   This can be used to avoid ambiguities that the above schema generation rule 
   might cause.

 * A schema search wizard has been added for testing.  It is accessed from the 
   project model view toolbar.    

== Release 1.1.4 ==

 * Numerical cardinality values other than 0, 1 and unbounded are now 
   supported.  

 * The Add/Remove tab now has fields for entering the min and max 
   cardinality of a property as well as check boxes for the common options.  As 
   before, cardinality values that would exceed those defined in the CIM for the 
   given property are not allowed.

 * Cardinality values are carried through the generated XML schema. In the 
   generated RDFS or simple-owl any cardinality greater than one is treated as 
   unbounded because those formats do not allow for arbitrary values.  

== Release 1.1.3 ==

 * Completed performance enhancements, improving the display refresh behavior 
   in the profile editor.  

== Release 1.1.2 ==

 * Numerous regressions that crept into 1.1.1 have been corrected.  

 * Performance of the profile editor has been improved.  There may be some 
   minor display refresh problems introduced by this work, but the editor is 
   much more pleasant to use.  

 * A merged schema export wizard has been added.  This allows you to export OWL 
   for the schema (as opposed to a profile) to a file in the workspace, which 
   will then be maintained up-to-date- by the build system, or to a file in the 
   filesystem.   Only the direct rdfs:subClassOf axioms are included, as 
   requested.

 * Enumerated values in generated XSD have simple names (with no class prefix).

 * When a range is added to a profile property it is no longer shown with 
   label "Unamed".  It is named after the schema class.  (Range profiles are new 
   feature that allow the range defined in the schema to be narrowed to a union 
   of its subclasses.)

 * A stereotype page has been added to the profile editor.  Stereotypes can be 
   added and removed from profile classes and properties.  These are transmitted 
   to the generated profile artifacts and can be used in custom profile 
   generation rules.   The list of available stereotypes is drawn from the UML 
   and from a stereotype definition file and from a built-in list.

 * The By Reference and Concrete flags are now represented as stereotypes and 
   can be assigned on the stereotype page.   By Reference flags in old profiles 
   are automatically converted to stereotypes upon editing.  

 * The concrete flag was formerly computed and is now a manually assigned 
   stereotype.  However, the concrete stereotype can be compute for all classes 
   in the profile by the new "Repair and Reorganise" wizard.

 * A "Repair and Reorganise" wizard is available from the Summary page of the 
   profile editor.   This provides a check list of global profile 
   transformations and will apply the selected ones in the appropriate order.  
   
The order is:

 * Stereotype all properties as By Reference

 * Stereotype leaf classes as Concrete

 * Repair and remap profile to schema

 * Reorganise profile per RDFS rules
 
The remap operation is usefull if namespaces in the schema have been changed. 
It updates the profile to reference a new schema finding the best match for 
each class and property.  It performs a number of other repairs as well.

The reorganise operation we present before.  Warning: RDFS rules are 
incompatible with the new property range profiles and these will be lost if 
this operation is performed.

== Changes 2008-02-15 ==

 * CIM/XML validator passes the full test suite, available at 
   http://files.cimtool.org/Validation-Cases-2008-02-15.zip
    
 * Includes incremental CIM/XML validation.  
    
 * User interface improvements.

== Changes 2008-01-31 ==

 * CIMTool has expanded namespace support described here:
   http://cimtool.org/cimtool/wiki/CIMToolNamespaceSupport
   * There is support for multiple extension model namespaces.
   * Optionally, those namespaces can be carried through to 
     profile artifacts (legacy-rdfs and simple-owl).  This corresponds
     to the current practice on the ERCOT project. 
   * The pros and cons of the latter practice are discussed here: 
     http://cimtool.org/cimtool/wiki/Namespaces
   * For a discussion of CIM extension model techniques using CIMTool
     see the UISOL Distributech presentation.
     
 * The CIM/XML validation function has been further developed.
    * Basic topology validation tests are now included
      and the profile conformance tests have been expanded.  
    * Memory footprint is down and speed is up.  
      It is now possible to validate giant models such 
      ERCOT in about the same time again it takes to parse their XML. 
      That is about 5 minutes parse plus 5 minutes validation on my box. 
      The models used for IOP testing only take seconds.        
    * A simplified user interface for validating models has been
      added.  It is implemented as an eclipse 'perspective' with 
      fixed layout and new views, actions and wizards for streamlining 
      this task. From the menu select Window > Show Perspective > Validation.
    * A validation result browser has been implemented. This groups
      messages by class and property and is linked to the Project Model
      View.
    * Repetitive validation messages involving with the same description
      and the same class or property are now suppressed by
      default.  This behaviour is controlled by a preference.
      Check Window > Preferences > CIMTool > Limit validation output.
    * The validation rule language has been improved and simplified.
      It is still rather technical to write these rules, but this 
      is a step towards practical per-project validation rules.    

 * Changes in the profile editor have been made.  
    * A  simplification has been made in the logic for detecting a
      concrete class. This affects XML schema generation.  
    * Note that ''concrete'' classes are rendered in XML Schema 
      as top level elements while other classes become complexTypes. 
      A class is concrete if it is not ''nested'' in another class 
      anywhere in the profile except with the ''by reference'' flag.
    * This change has the potential to change the XML Schema generated
      from existing profiles where a class was used both by reference and
      not in the same profile.  That is an unlikely scenario.
    * The icon for a ''by reference'' association has been changed to an arrow.
      The icon for a ''nested'' association is a class box.
    * The ''Reorganize Profile'' function (found on the Summary tab)
      now has an option to convert all associations to ''by reference''.
      This is mainly useful for CIM/XML profiles where that as the
      correct way to model associations.
    * The ''Remap Profile'' has been temporarily withdrawn.  A more 
      reliable way to adjust a profile when the information model
      namespace(s) change is being developed.


 
