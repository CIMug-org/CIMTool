<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:a="http://langdale.com.au/2005/Message#">

	<xsl:output indent="yes" doctype-public="-//W3C//DTD XHTML 1.1//EN" doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" />
	<xsl:param name="version"></xsl:param>
	<xsl:param name="baseURI"></xsl:param>

	<xsl:template match="a:Catalog">
		<!--  the top level template generates the html and body elementa -->
		<html>
			<head>
				<title>Profile Documentation</title>
				 <style type="text/css">
				
				th {
				    text-align : left;
				    vertical-align : top;
				  }
				
				
				td {
				    text-align : left;
				    vertical-align : top;
				  }
				
				
				.note {
				    font-style : italic;
				  }
				
				
				td {
				    border-top-style : solid;
				    border-top-width : 1px;
				  }
				
				
				h1 {
				    border-bottom-style : solid;
				  }
				
				
				h2 {
				    border-bottom-style : solid;
				  }
				
				</style>
				
			</head>
			<body>
				<h1>Profile Documentation</h1>
				<p>
					The namespace for this profile is
					<xsl:value-of select="$baseURI" />
				</p>
				<p>
					Generated by CIMTool
					<xsl:value-of select="$version" />
					, see http://cimtool.org
				</p>
				<xsl:apply-templates />
				<xsl:apply-templates mode="declare" />
			</body>
		</html>
	</xsl:template>

	<xsl:template match="a:Message">
		<!--  generates an envelope element for the message -->
		<h2><xsl:value-of select="@name"/></h2>
		<xsl:apply-templates mode="annotate" />
		<xsl:apply-templates />
	</xsl:template>

	<xsl:template match="a:Root">
		<!--  generates the root payload element definitions -->
        <a id="{@name}"/>
        <h2>Concrete Class: <xsl:value-of select="@name"/></h2>
		<xsl:call-template name="complex_type" />
	</xsl:template>
    
    <xsl:template name="complex_type">
	    <!-- generates the body of a class -->
        <xsl:apply-templates mode="annotate" />
        <h3>Base Classes</h3>
        <xsl:apply-templates select="a:SuperType"/>
        <h3>Members</h3>
        <table>
		<xsl:apply-templates select="a:Domain|a:Simple|a:Instance|a:Reference|a:Enumerated" />
		</table>
	</xsl:template>

	<xsl:template match="a:SuperType">
	    <p><a href="#{@name}"><xsl:value-of select="@name"/></a></p>
		<xsl:apply-templates mode="annotate" />
	</xsl:template>

	<xsl:template match="a:Instance|a:Reference|a:Enumerated">
		<!--  generates an association -->
		<tr>
        <th><xsl:value-of select="@name"/></th>
        <td><xsl:value-of select="@minOccurs"/>..<xsl:value-of select="@maxOccurs"/></td>
        <td><a href="#{@type}"><xsl:value-of select="@type"/></a></td>
        <td>
        <xsl:apply-templates mode="annotate" />
        </td>
        </tr>
	</xsl:template>

	<xsl:template match="a:Domain">
        <!--  generates an attribute with a domain type -->
        <tr>
        <th><xsl:value-of select="@name"/></th>
        <td><xsl:value-of select="@minOccurs"/>..<xsl:value-of select="@maxOccurs"/></td>
        <td><a href="#{@type}"><xsl:value-of select="@type"/></a></td>
        <td>
        <xsl:apply-templates mode="annotate" />
        </td>
        </tr>
	</xsl:template>

	<xsl:template match="a:Simple">
        <!--  generates an attribute with an xsd part 2 simple type -->
        <tr>
        <th><xsl:value-of select="@name"/></th>
        <td><xsl:value-of select="@minOccurs"/>..<xsl:value-of select="@maxOccurs"/></td>
        <td><xsl:value-of select="@xstype"/></td>
        <td>
        <xsl:apply-templates mode="annotate" />
        </td>
        </tr>
	</xsl:template>

    <xsl:template match="a:ComplexType" mode="declare">
        <a id="{@name}"/>
        <h2>Abstract Class: <xsl:value-of select="@name"/></h2>
        <xsl:call-template name="complex_type" />
    </xsl:template>

	<xsl:template match="a:SimpleType" mode="declare">
		<!--  declares a a CIM domain type in terms of an xsd part 2 simple type -->
        <a id="{@name}"/>
        <h2>Domain Class: <xsl:value-of select="@name"/></h2>
        <xsl:apply-templates mode="annotate" />
        <p>XSD Type: <xsl:value-of select="@xstype"/></p>
	</xsl:template>

	<xsl:template match="a:EnumeratedType" mode="declare">
		<!-- declares an enumerated type -->
        <a id="{@name}"/>
        <h2>Enumerated Type: <xsl:value-of select="@name"/></h2>
        <xsl:apply-templates mode="annotate" />
        <table>
		<xsl:apply-templates />
		</table>
	</xsl:template>

	<xsl:template match="a:EnumeratedValue">
		<!-- declares one value within an enumerated type -->
		<tr>
        <th><xsl:value-of select="@name"/></th>
        <td>
        <xsl:apply-templates mode="annotate" />
        </td>
        </tr>
	</xsl:template>

	<xsl:template match="a:Comment" mode="annotate">
		<!--  generate and annotation -->
		<p class="comment"><xsl:value-of select="." /></p>
	</xsl:template>

	<xsl:template match="a:Note" mode="annotate">
		<!--  generate and annotation -->
		<p class="note"><xsl:value-of select="." /></p>
	</xsl:template>

	<xsl:template match="node()">
		<!-- dont pass any defaults -->
	</xsl:template>

	<xsl:template match="node()" mode="annotate">
		<!-- dont pass any defaults in annotate mode -->
	</xsl:template>

	<xsl:template match="node()" mode="declare">
		<!-- dont pass any defaults in declare mode -->
	</xsl:template>

</xsl:stylesheet>